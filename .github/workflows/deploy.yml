name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'public/**'
      - 'package.json'
      - 'tailwind.config.js'
  pull_request:
    branches: [main]
    paths:
      - 'public/**'
      - 'package.json'
      - 'tailwind.config.js'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies (for potential future build steps)
        run: npm ci || echo "No package-lock.json found, skipping npm ci"

      - name: Build
        run: npm run build

      - name: Post-process files for cache busting
        run: |
          # Generate cache buster (timestamp + short commit hash)
          CACHE_BUSTER="$(date +%s)-$(git rev-parse --short HEAD)"
          echo "Generated cache buster: $CACHE_BUSTER"

          # Replace cache buster placeholder in main script tag
          sed -i "s/CACHE_BUSTER_PLACEHOLDER/$CACHE_BUSTER/g" _build/index.html

          # Cache bust all ES6 module imports in JavaScript files
          echo "Adding cache busters to module imports..."
          find _build -name "*.js" -type f -exec sed -i "s|from '\(\./[^']*\.js\)'|from '\1?v=$CACHE_BUSTER'|g" {} \;
          find _build -name "*.js" -type f -exec sed -i "s|from \"\(\./[^\"]*\.js\)\"|from \"\1?v=$CACHE_BUSTER\"|g" {} \;

          # Also handle dynamic imports if any exist
          find _build -name "*.js" -type f -exec sed -i "s|import('\(\./[^']*\.js\)')|import('\1?v=$CACHE_BUSTER')|g" {} \;
          find _build -name "*.js" -type f -exec sed -i "s|import(\"\(\./[^\"]*\.js\)\")|import(\"\1?v=$CACHE_BUSTER\")|g" {} \;

          # Replace weather API key
          if [ -n "$WEATHER_API_KEY" ]; then
            sed -i "s/WEATHER_API_KEY_PLACEHOLDER/$WEATHER_API_KEY/g" _build/index.html
          else
            echo "Warning: WEATHER_API_KEY secret not set"
          fi

          echo "Cache busting complete. All modules will have version: $CACHE_BUSTER"
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_build"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
